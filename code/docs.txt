													#Static#
Variables:
count_str (int) - количество строк

open_pos (char) - символ открытой позиции

obtacle_pos (char) - символ закрытой позиции 

fill_pos (char) - символ заливки 

#--------------------------------------------------------------------------------------------------------------------------------#
													#ERROR.h#
#---------------------------------#ARG_ERROR.h#
Заголовочный файл, который отвечает за обработку правильности ввода данных из консоли

1) int arg_error(char *arg, char open_pos, char obtacle_pos, char fill_pos):
принимает значение аргумента задающего значения мапе и символы заполняющие ее
функция объединяет методы проверки правильности формата аргумента и, если все тесты выполнены, возращает 0, в противном случае -1

2) int arg_format(char *arg):
форматирует строку аргумента, записывая в переменные все данные
проверяет количество аргументов, при неправильном вводе возращает -1;

3) int arg_not_char(char *arg):
проверяет подходит ли аргумент формату(является ли первый символ цифрой);

4) int arg_repeat(char open_pos, char obtacle_pos, char fill_pos):
проверяет не повторяются ли значения переменных аргумента, при повторении возвращает -1;

#---------------------------------#MAP_ERROR.h#
Заголовочный файл, который отвечает за обработку правильности ввода данных непосредсвенно из файла

1) int map_error(char *file_name, int desc):
принимает имя файла, вторым аргументом дескриптор файла
функция объединяет методы проверки правильности формата мапы и, если все тесты выполнены, возращает 0, в противном случае -1

2) int map_lines_count(char *file_name, int desc):
сравнивает количество линий указанных в аргументе с действительным количеством, при неодинаковом количестве возвращает -1

3) int map_dis_char(char *file_name, int desc, char first, char second):
проверяет совпадают ли символы в аргументе с символами в мапе, если нет возвращает -1

4) int map_lenght_error(char *file_name, int desc):
сравнивает длины строк, и возвращает -1 если они не совпадают
